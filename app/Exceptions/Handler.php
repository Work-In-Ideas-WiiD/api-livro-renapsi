<?php

namespace App\Exceptions;

use Illuminate\Auth\AuthenticationException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * The list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     */
    public function register(): void
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e): Response|JsonResponse|RedirectResponse|\Symfony\Component\HttpFoundation\Response
    {
        if ($e instanceof AuthenticationException) {
            if ($request->is('api/*') && ($request->ajax() || $request->wantsJson())) {
                return response()->json([
                    'message' => 'Unauthenticated.'
                ], 401);
            }
        }

        if ($request->expectsJson()) {
            return (new JsonExceptionHandler($this->container))->render($request, $e);
        }

        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
